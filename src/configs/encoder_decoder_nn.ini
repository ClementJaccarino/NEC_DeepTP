[nn]
# cmd
# python .\run_rnn_model.py --train_or_predict predict --name good_model/model.ckpt-799
# python .\run_rnn_model.py --train_or_predict train --name good_model/model.ckpt-799 --train_from_model True
# RNN IO
epochs = 3000
n_input = 20
n_encode = 2

# data manipulation
data_dir = ../../DATA/DeepTP/processed_flight_tracks.csv
shuffle_data_after_epoch = True
batch_size = 256

# directories
model_dir = nn/

# training spec.
SAVE_MODEL_EPOCH_NUM = 20
VALIDATION_EPOCH_NUM = 20
tf_device = /cpu:0
# tf_device = /device:GPU:0

# optimizer
gradient_clipping = True
beta1 = 0.9
beta2 = 0.999
epsilon = 1e-8
learning_rate = 0.0005
p_end_loss_weight = 0.5
# 0.000010
# 0.0005 for the first run

[convolution]
n_channels = 4
filter_1 = 6
filter_2 = 3
filter_3 = 3
# filter_4 = 3
filter_1_dep = 16
filter_2_dep = 16
filter_3_dep = 24
# filter_4_dep = 16
dense_dep = 32

[lstm]
n_mixture = 3
n_lstm_layers = 2
default_stddev = 0.01
b1_stddev = %(default_stddev)s
h1_stddev = %(default_stddev)s
b2_stddev = %(default_stddev)s
h2_stddev = %(default_stddev)s
b3_stddev = %(default_stddev)s
h3_stddev = %(default_stddev)s
b4_stddev = %(default_stddev)s
h4_stddev = %(default_stddev)s
b5_stddev = %(default_stddev)s
h5_stddev = %(default_stddev)s
b_voc_stddev = %(default_stddev)s
h_voc_stddev = %(default_stddev)s

n_cell_dim  = 128
n_hidden_1 = 32
n_hidden_2 = 64
# n_hidden_3 = 2 * %(n_cell_dim)s
# n_hidden_4 = 128
n_controled_var = 6
# n_prob_param = 15
